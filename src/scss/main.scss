@use 'sass:list';


/*** Variables ***/
// colors
$clr-dark-blue: hsl(223, 41%, 13%);
$clr-medium-blue: hsl(224, 40%, 20%);
$clr-light-blue: hsl(220, 100%, 95%);
$clr-accent-blue: hsl(212, 99%, 50%);
$clr-black: hsl(220, 8%, 8%);
$clr-white: hsl(0, 0%, 100%); 
$clr-grey: hsl(212, 7%, 33%);
$clr-light-grey: hsl(224, 10%, 56%);
$clr-blue-grey: hsl(215, 24%, 49%);

// typography
$ff-primary: 'Courier Prime', monospace;

$fs-500: 1.5rem;
$fs-400: 1rem;
$fs-300: .875rem;

$fw-700: 700;
$fw-600: 600;
$fw-500: 500;
$fw-400: 400;

// flex
$gap-sm: .75rem;
$gap-md: 1rem;

// box-shadow
$box-shadow-dark: 0 0 0 0 rgba(0, 0, 0, 0);
$box-shadow-light: 0px 5px 10px 0px rgb(205, 205, 205);

// Color Themes
// $text, $bg-color, $user-color, $box-color, $theme-toggle, $icon-color, $box-shadow
$scheme-dark: $clr-white, $clr-dark-blue, $clr-medium-blue, $clr-dark-blue, $clr-white, $clr-white, $box-shadow-dark; 
$scheme-light: $clr-grey, $clr-light-blue, $clr-white, $clr-light-blue, $clr-grey, $clr-blue-grey, $box-shadow-light;

// Mixins
@mixin color-scheme($text, $bg-color, $user-color, $box-color, $theme-toggle, $icon-color, $box-shadow) {
  color: $text;
  background-color: $bg-color;

  .search-bar, 
  .user-card {
    background-color: $user-color;
    box-shadow: $box-shadow;
  }

  .github-stats {
    background-color: $box-color;
  }

  .theme-toggle {
    color: $text;
    fill: $theme-toggle;
  }

  .icon-group > svg {
    color: $icon-color;
  }

  input,
  input::placeholder {
    color: $text;
  }
}

@mixin box-shadow() {
  
}


/*** Reset ***/
*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}

html:focus-within {
  scroll-behavior: smooth;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: $ff-primary;
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button {
  font: inherit;
  background-color: inherit;
  border: none;
}

a {
  text-decoration: none;
}


/*** Utilities ***/
.text-white { color: $clr-white; }
.text-black { color: $clr-black; }
.text-grey { color: $clr-grey; }
.text-light-grey { color: $clr-light-grey; }
.text-accent { color: $clr-accent-blue; }

.fs-500 { font-size: $fs-500; line-height: 24px;  }
.fs-400 { font-size: $fs-400; }
.fs-300 { font-size: $fs-300; }

.fw-700 { font-weight: $fw-700; }
.fw-600 { font-weight: $fw-600; }
.fw-500 { font-weight: $fw-500; }
.fw-400 { font-weight: $fw-400; }

.flex {
    display: flex;
    gap: $gap-md;
}

.container {
  width: min(75ch, 100vw - 2rem);
  margin-inline: auto;
  container: userCard / inline-size;
}

// visually hide the element, but keep it in the accessability tree
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.dark {
  @include color-scheme($scheme-dark ...)
}

.light {
  @include color-scheme($scheme-light ...)
}


/*** Components ***/
// button
.btn {
  padding: .5rem 1rem;
  color: $clr-white;
  font-weight: 500;
  background-color: $clr-accent-blue;
  border-radius: 10px;
  cursor: pointer;

  &:hover {
    background-color: hsl(212, 95%, 70%);
  }

  &.theme-toggle {
    background-color: unset;
    font-weight: 500;
    letter-spacing: 2px;
    text-transform: uppercase;
    display: inline-flex;
    gap: $gap-sm;
    align-items: center;

    & svg {
      font-size: $fs-500;
    }
  }
}

// header
.user-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 0;

  h1 {
    font-size: 2rem;
  }
}

// search bar
.search-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  border-radius: 15px;

  .form-control {
    display: flex;
    align-items: center;
    gap: $gap-sm;
  }

  input {
    width: 75%;
    // color: $clr-white;
  }

  svg {
    fill: $clr-accent-blue;
    font-size: $fs-500;
  }
}

// user card
.user-card {
  display: grid;
  gap: .5rem;
  grid-template-areas: 
    "avatar login login"
    "avatar twitter twitter"
    "avatar date date"
    "bio bio bio"
    "stat stat stat"
    "location location location"
    "twitterIcon twitterIcon twitterIcon"
    "email email email"
    "something something something"
    "page page page";
  margin-block-start: 1.5rem;
  padding: 2rem;
  border-radius: 15px;

  .login {
    grid-area: login;
  }

  .twitter {
    grid-area: twitter;
  }

  .date {
    grid-area: date;
  }

  .bio {
    grid-area: bio;
    margin-block-start: 2rem;
  }

  .location {
    grid-area: location;
  }

  .twitter-icon {
    grid-area: twitterIcon;
  }

  .page {
    grid-area: page;
  }

  .email {
    grid-area: email;
  }

  .something {
    grid-area: something;
  }

  img {
    grid-area: avatar;
    justify-self: start;
    max-width: 100px;
    aspect-ratio: 1 / 1; 
    border-radius: 50%;
    margin-right: 1rem;
  }

  .github-stats {
    grid-area: stat;
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    gap: $gap-md;
    border-radius: 15px;
    padding: 1.5rem 1.25rem 1.5rem 1rem;
    margin-block-start: 1rem;


    > * {
      flex-basis: 100%;
      text-align: center;
      display: flex;
      flex-direction: column;
      gap: $gap-sm;
    }
  }

  .icon-group {
    display: flex;
    gap: $gap-sm;
    align-items: center;
    margin-block-start: 1rem;
  }
}

/*** General Styles ***/
main {
  min-height: 100vh;
  display: grid;
  place-content: center;
  padding-block: 2rem;
}

article {
  min-height: 100vh;
}


/*** Container queries ***/
@container userCard (width > 550px) {
  .user-card {
    grid-template-areas: 
      "avatar login date"
      "avatar twitter twitter"
      "avatar bio bio"
      ". stat stat"
      ". location twitterIcon"
      ". email something"
      ". page page";
    gap: 0;
  }

  .date {
    justify-self: end;
  }

  .twitter-icon, 
  .something {
    margin-left: .8rem;
  }
}



